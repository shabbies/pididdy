package servlet;

import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.ObjectMetadata;
import com.amazonaws.services.s3.model.PutObjectRequest;
import com.pi.diddy.controller.OcrController;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;
import org.apache.commons.io.IOUtils;


@MultipartConfig
public class FileUploadServlet extends HttpServlet {

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        Part avatarPart = request.getPart("file");
        InputStream is = null;
        if (avatarPart != null){
            is = avatarPart.getInputStream();
        }
        
        String fileName = avatarPart.getName();

        // upload to s3
        BasicAWSCredentials awsCreds = new BasicAWSCredentials("AKIAJEY5PHY35DCUPXGA", "Vj+rnXktBa+pwIuykht+QgC5NqgJYD29DqRHFOky");

        AmazonS3 s3 = new AmazonS3Client(awsCreds);
        Region se1 = Region.getRegion(Regions.AP_SOUTHEAST_1);
        s3.setRegion(se1);

        String bucketName = "media.pi-diddy.herokuapp.com";
        String key = fileName + ".jpg";
        
        ObjectMetadata data = new ObjectMetadata();
        data.setContentType(avatarPart.getContentType());
        
        s3.putObject(new PutObjectRequest(bucketName, key, is, data));

        // see image to database for recognition 
        // If exist, go to database to get the best quality audio for the image and return the audio to the user
        // Else, send the image to OCR & and generate new ID for the image
//        OcrController ocrCtrl = new OcrController();
//        String ocr_response = ocrCtrl.getImageString(filePath);
        // Next, send the string generated by OCR to language translator
        // send the image to forum 
        // return the audio to the user
        
    }
}
